@page "/counter"
@using Microsoft.Extensions.AI
@rendermode InteractiveServer


<div class="card">
    <div class="card-header">
        Prawie jak czatGBT
    </div>
    <div class="card-body ">
        @foreach (var item in Messages)
        {
            <div class="d-flex  @(item.IsMy?"justify-content-start":"justify-content-end")">
                <div class="alert chat-message @(item.IsMy?"alert-primary":"alert-info") m-2 p-1" style="flex: 0 1 500px; opacity: 1; transition: all 1s;">
                    @((MarkupString)item.Message)
                </div>
            </div>
        }
        <div class="d-flex gap-2">

            <input type="text" class="form-control" @oninput="HandleInput" @bind="Message" style="flex:1 1 200px" @onkeydown="HandleKeyDown" />
            <button class="btn btn-primary" @onclick="SendMessage">Skończylem</button>
        </div>
    </div>
</div>


@code {
    public List<Massage> Messages { get; set; } = [];
    [Inject] private IChatClient ChatClient { get; set; } = default!;
    public string Message { get; set; } = string.Empty;

    private async Task SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(Message))
        {
            Messages.Add(new Massage { Message = Message, IsMy = true });
            var myMessage = new Massage { Message = "", IsMy = false };
            var localMassage = Message;
            Message = string.Empty;
            Messages.Add(myMessage);
            await foreach (var item in ChatClient.CompleteStreamingAsync(localMassage))
            {
                myMessage.Message += item.Text;
                await InvokeAsync(StateHasChanged);
            }
        }
    }
    public void HandleInput(ChangeEventArgs e)
    {
        Message = e.Value?.ToString() ?? "";
    }

    private async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SendMessage();
        }
    }

    public class Massage
    {
        public string Message { get; set; } = string.Empty;

        public bool IsMy { get; set; }
    }
}
